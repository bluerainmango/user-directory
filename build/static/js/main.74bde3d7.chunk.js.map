{"version":3,"sources":["redux/employee/employee.reducer.js","redux/employee/employee.data.js","redux/root-reducer.js","redux/store.js","components/form-select/select.jsx","redux/employee/employee.actions.js","components/search-box/search-box.jsx","components/row/row.jsx","components/table/table.jsx","components/table/table.util.js","App.js","index.js"],"names":["INITIAL_STATE","filteredEmployees","id","name","email","dept","ext","position","filterBy","sortBy","search","employeeReducer","state","action","type","payload","copiedSortBy","splice","payloadFirst","payloadSecond","combineReducers","employees","store","createStore","rootReducer","applyMiddleware","connect","dispatch","setFilterBy","value","target","setSortBy","select","sort","className","filterOrder","values","FormControl","InputLabel","htmlFor","Number","NativeSelect","onChange","map","key","setSearch","TextField","label","el","Row","TableRow","TableCell","props","filter","employeeObj","Object","join","toString","toLowerCase","includes","firstBy","extend","f","thenBy","tb","y","x","this","a","b","sortCallBackFunc","sortName","split","order","v1","v2","some","sorting","i","length","tableUtil","TableHead","TableBody","otherProps","filterEmployees","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74bde3d7.chunk.js","sourcesContent":["import { employees } from \"./employee.data\";\n\nconst INITIAL_STATE = {\n  filteredEmployees: employees,\n  filterBy: \"all\",\n  sortBy: [null, null, null],\n  search: \"\"\n};\n\nconst employeeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"FILTER_EMPLOYEES\":\n      return {\n        ...state,\n        filteredEmployees: action.payload\n      };\n    case \"SET_FILTER_BY\":\n      return {\n        ...state,\n        filterBy: action.payload\n      };\n    case \"SET_SORT_BY\":\n      // Copy sortBy array and mutate it\n      let copiedSortBy = [...state.sortBy];\n      copiedSortBy.splice(action.payloadFirst, 1, action.payloadSecond);\n\n      return {\n        ...state,\n        sortBy: copiedSortBy\n      };\n\n    case \"SET_SEARCH\":\n      return {\n        ...state,\n        search: action.payload\n      };\n    case \"SORT_EMPLOYEES\":\n      return {\n        ...state,\n        filteredEmployees: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default employeeReducer;\n","export const employees = [\n  {\n    id: 1,\n    name: \"Emily Yu\",\n    email: \"emily@gmail.com\",\n    dept: \"Development\",\n    ext: 123,\n    position: \"Full stack developer\"\n  },\n  {\n    id: 70,\n    name: \"Emily Yu\",\n    email: \"emily4@gmail.com\",\n    dept: \"HR\",\n    ext: 129,\n    position: \"HR assistant\"\n  },\n  {\n    id: 100,\n    name: \"Emily Yu\",\n    email: \"emily2@gmail.com\",\n    dept: \"Marketing\",\n    ext: 121,\n    position: \"Ecommerce marketer\"\n  },\n  {\n    id: 50,\n    name: \"Emily Yu\",\n    email: \"emily3@gmail.com\",\n    dept: \"HR\",\n    ext: 125,\n    position: \"HR assistant\"\n  },\n  {\n    id: 2,\n    name: \"Henry Diaz\",\n    email: \"Henry@gmail.com\",\n    dept: \"HR\",\n    ext: 425,\n    position: \"HR manager\"\n  },\n  {\n    id: 3,\n    name: \"Jessica Clark\",\n    email: \"Jessica@gmail.com\",\n    dept: \"Marketing\",\n    ext: 232,\n    position: \"Online Marketer\"\n  },\n  {\n    id: 4,\n    name: \"Julie James\",\n    email: \"Julie@gmail.com\",\n    dept: \"Accounting\",\n    ext: 533,\n    position: \"Accountant\"\n  },\n  {\n    id: 5,\n    name: \"Wanda Wood\",\n    email: \"Wanda@gmail.com\",\n    dept: \"Development\",\n    ext: 125,\n    position: \"Backend developer\"\n  },\n  {\n    id: 6,\n    name: \"George Robinson\",\n    email: \"George@gmail.com\",\n    dept: \"Marketing\",\n    ext: 184,\n    position: \"Marketing manager\"\n  },\n  {\n    id: 7,\n    name: \"Virginia Cooper\",\n    email: \"Virginia@gmail.com\",\n    dept: \"Sales\",\n    ext: 449,\n    position: \"Local sales person\"\n  },\n  {\n    id: 8,\n    name: \"Earl Howard\",\n    email: \"Earl@gmail.com\",\n    dept: \"Sales\",\n    ext: 148,\n    position: \"Sales director\"\n  }\n];\n","import { combineReducers } from \"redux\";\n\nimport employeeReducer from \"./employee/employee.reducer\";\n\nexport default combineReducers({\n  employees: employeeReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n\nlet middlewares = [];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares = [logger];\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nimport { connect } from \"react-redux\";\nimport { setFilterBy, setSortBy } from \"../../redux/employee/employee.actions\";\n\nconst Select = ({ className, filterOrder, values, setFilterBy, setSortBy }) => {\n  return (\n    <FormControl>\n      <InputLabel htmlFor=\"age-native-helper\">\n        {filterOrder ? `Criteria ${Number(filterOrder) + 1}` : \"Filter By\"}\n      </InputLabel>\n      <NativeSelect\n        id={filterOrder}\n        onChange={className === \"filterBy\" ? setFilterBy : setSortBy}\n      >\n        {values.map(value => (\n          <option key={value} value={value} className={filterOrder}>\n            {value}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setFilterBy: value => dispatch(setFilterBy(value.target.value)),\n  setSortBy: select =>\n    dispatch(setSortBy(select.target.id, select.target.value))\n});\n\nexport default connect(null, mapDispatchToProps)(Select);\n","export const filterEmployees = employees => ({\n  type: \"FILTER_EMPLOYEES\",\n  payload: employees\n});\n\nexport const setFilterBy = filter => ({\n  type: \"SET_FILTER_BY\",\n  payload: filter\n});\n\nexport const setSortBy = (id = null, sort) => ({\n  type: \"SET_SORT_BY\",\n  payloadFirst: id,\n  payloadSecond: sort\n});\n\nexport const setSearch = search => ({\n  type: \"SET_SEARCH\",\n  payload: search\n});\n\nexport const sortEmployees = employees => ({\n  type: \"SORT_EMPLOYEES\",\n  payload: employees\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setSearch } from \"../../redux/employee/employee.actions\";\nimport Select from \"../form-select/select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport SortByAlphaIcon from \"@material-ui/icons/SortByAlpha\";\nimport \"./search-box.css\";\n\nconst SearchBox = ({ setSearch, setSortBy }) => (\n  <div className=\"searchBox\">\n    <div className=\"search\">\n      <p className=\"title withIcon\">\n        <FilterListIcon />\n        Filter\n      </p>\n      <Select\n        className=\"filterBy\"\n        values={[\"all\", \"name\", \"ext\", \"email\", \"dept\", \"position\"]}\n      />\n      <TextField\n        id=\"standard-basic\"\n        label=\"Type search keyword\"\n        className=\"search\"\n        onChange={setSearch}\n      />\n    </div>\n    <p className=\"title withIcon\">\n      <SortByAlphaIcon />\n      Sort\n    </p>\n    {[\"0\", \"1\", \"2\"].map(el => (\n      <Select\n        key={el}\n        filterOrder={el}\n        className=\"sortBy\"\n        values={[\n          \"none\",\n          \"name-ascending\",\n          \"name-descending\",\n          \"ext-ascending\",\n          \"ext-descending\",\n          \"email-ascending\",\n          \"email-descending\",\n          \"dept-ascending\",\n          \"dept-descending\",\n          \"position-ascending\",\n          \"position-descending\"\n        ]}\n      />\n    ))}\n  </div>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  setSearch: search => dispatch(setSearch(search.target.value))\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBox);\n","import React from \"react\";\n\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nconst Row = ({ name, dept, position, ext, email }) => (\n  <TableRow>\n    <TableCell>{name}</TableCell>\n    <TableCell>{dept}</TableCell>\n    <TableCell>{position}</TableCell>\n    <TableCell>{ext}</TableCell>\n    <TableCell>{email}</TableCell>\n  </TableRow>\n);\n\nexport default Row;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Row from \"../row/row\";\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport { tableUtil } from \"./table.util\";\nimport \"./table.css\";\n\nconst Table = props => {\n  let { filteredEmployees, search, filterBy, sortBy } = props;\n\n  //! Filter & Sort employees\n  filteredEmployees = tableUtil(filteredEmployees, search, filterBy, sortBy);\n\n  return (\n    <table>\n      <TableHead>\n        <TableRow>\n          <TableCell id=\"name\">NAME</TableCell>\n          <TableCell id=\"dept\">DEPT</TableCell>\n          <TableCell id=\"position\">POSITION</TableCell>\n          <TableCell id=\"ext\">EXT</TableCell>\n          <TableCell id=\"email\">EMAIL</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {filteredEmployees.map(({ id, ...otherProps }) => (\n          <Row key={id} {...otherProps} />\n        ))}\n      </TableBody>\n    </table>\n  );\n};\n\nconst mapStateToProps = ({ employees }) => ({\n  filteredEmployees: employees.filteredEmployees,\n  search: employees.search,\n  filterBy: employees.filterBy,\n  sortBy: employees.sortBy\n});\n\nexport default connect(mapStateToProps)(Table);\n","export const tableUtil = (filteredEmployees, search, filterBy, sortBy) => {\n  //! Filter by search\n  if (filterBy === \"all\") {\n    filteredEmployees = filteredEmployees.filter((employeeObj) => {\n      return Object.values(employeeObj)\n        .join(\"\")\n        .toString()\n        .toLowerCase()\n        .includes(search.toLowerCase().toString());\n    });\n  } else {\n    filteredEmployees = filteredEmployees.filter((el) => {\n      return typeof el[filterBy] === \"number\"\n        ? `${el[filterBy]}`.includes(search)\n        : el[filterBy].toLowerCase().includes(search.toLowerCase());\n    });\n  }\n\n  //! Sort by multiple select options\n  //* Util 1: Multiple sorting function\n  // firstBy function is taken from Teun Duynstee's ThenBy.js library\n  // https://github.com/Teun/thenBy.js/blob/master/thenBy.js\n  const firstBy = (function () {\n    function extend(f) {\n      // f: firstBy's param(first comparison func)\n      f.thenBy = tb;\n      return f;\n    }\n\n    function tb(y) {\n      const x = this; // this === f\n      return extend(function (a, b) {\n        return x(a, b) || y(a, b); // if first func return 0(equal) => compare with next func: y(a,b)\n      });\n    }\n    return extend;\n  })();\n\n  //* Util 2: sort() callback func(character, number, ascending, descending)\n  function sortCallBackFunc(value) {\n    const sortName = value.split(\"-\")[0];\n    const order = value.split(\"-\")[1];\n\n    if (sortName === \"ext\" && order === \"ascending\") {\n      return function (v1, v2) {\n        return v1[sortName] - v2[sortName];\n      };\n    } else if (sortName === \"ext\" && order === \"descending\") {\n      return function (v1, v2) {\n        return v2[sortName] - v1[sortName];\n      };\n    } else if (sortName !== \"ext\" && order === \"ascending\") {\n      return function (v1, v2) {\n        return v1[sortName] < v2[sortName]\n          ? -1\n          : v1[sortName] > v2[sortName]\n          ? 1\n          : 0;\n      };\n    } else {\n      return function (v1, v2) {\n        return v2[sortName] < v1[sortName]\n          ? -1\n          : v2[sortName] > v1[sortName]\n          ? 1\n          : 0;\n      };\n    }\n  }\n\n  //* Only when sortBy arr has a valid value of sort\n  if (sortBy.some((el) => el && el !== \"none\")) {\n    let sorting;\n\n    //* 1. Create sorting (multiple sort standards)\n    for (let i = 0; i < sortBy.length; i++) {\n      // When it's an invalid sort value, pass the loop\n      if (sortBy[i] && sortBy[i] !== \"none\") {\n        // First time to sort or not?\n        if (!sorting) {\n          sorting = firstBy(sortCallBackFunc(sortBy[i]));\n          // console.log(\"🐹sorting: firstBy\", sorting);\n        } else {\n          sorting = sorting.thenBy(sortCallBackFunc(sortBy[i]));\n          // console.log(\"🦊sorting: thenBy\", sorting);\n        }\n      }\n    }\n\n    //* 2. Sort data\n    return filteredEmployees.sort(sorting);\n  }\n  return filteredEmployees;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { filterEmployees } from \"./redux/employee/employee.actions\";\n\nimport SearchBox from \"./components/search-box/search-box\";\nimport \"./App.css\";\nimport Table from \"./components/table/table\";\n\nconst App = ({ filterEmployees, filteredEmployees }) => {\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Employee Directory</h1>\n      <main>\n        <SearchBox />\n        <Table />\n      </main>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ employees }) => ({\n  filteredEmployees: employees.filteredEmployees\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filterEmployees: employees => dispatch(filterEmployees(employees))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n      {/* {console.log(\"store\", store)} */}\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}